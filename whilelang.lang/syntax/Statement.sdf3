module Statement

imports
  
  Common
  Expr

context-free syntax
  
  Statement.Assign = [[Lhs] := [Expr]]
  Lhs.Var = ID
  Statement.Skip = [skip]
  
  Statement.Seq = [[Statement];
[Statement]] {right}

  Statement.IfThenElse = [if [Expr]
  then [Statement]
  else [Statement]]
  
  Statement.While = [while [Expr] do
  [Statement]]

  Statement.Call = [call [ID]([{Expr ", "}+], [ID])]

  Statement = [(
[Statement]
)] {bracket}

context-free priorities
  
  {Statement.While Statement.IfThenElse} >
  Statement.Seq